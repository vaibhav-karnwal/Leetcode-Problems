Method 1:

class Solution {
    public int[] twoSum(int[] nums, int target) 
    {
        for(int i=0;i<nums.length;i++)
        {
            for(int j=1+i;j<nums.length;j++)
            {
                if(nums[j]==target-nums[i])
                    return new int[]{i,j};
            }
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}

Method 2:

class Solution {
    public int[] twoSum(int[] nums, int target) 
    {
        Map<Integer, Integer>map=new HashMap<>();
        for(int i=0;i<nums.length;i++)
        {
            int diff=target-nums[i];
            if(map.containsKey(diff) && map.get(diff)!=i)
                return new int[]{i, map.get(diff)};
            else
                map.put(nums[i],i);
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}
